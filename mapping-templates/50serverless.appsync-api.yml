name: appsyncmasterclass
schema: schema.api.graphql
authenticationType: AMAZON_COGNITO_USER_POOLS
userPoolConfig:
  awsRegion: eu-west-1
  defaultAction: ALLOW
  userPoolId: !Ref CognitoUserPool
mappingTemplatesLocation: mapping-templates
mappingTemplates:
  - type: Query
    field: getMyProfile
    dataSource: usersTable
  - type: Query
    field: getProfile
    dataSource: usersTable
  - type: Query
    field: getImageUploadUrl
    dataSource: getImageUploadUrlFunction
    request: false
    response: false
  - type: Query
    field: getTweets
    dataSource: tweetsTable
  - type: Query
    field: getMyTimeline
    dataSource: timelinesTable
  - type: Query
    field: getLikes
    dataSource: likesTable

  - type: Mutation
    field: editMyProfile
    dataSource: usersTable
  - type: Mutation
    field: tweet
    dataSource: tweetFunction
    request: false
    response: false
  - type: Mutation
    field: like
    dataSource: likeMutation
  - type: Mutation
    field: unlike
    dataSource: unlikeMutation
  - type: Mutation
    field: retweet
    dataSource: retweetFunction
    request: false
    response: false
  - type: Mutation
    field: unretweet
    dataSource: unretweetFunction
    request: false
    response: false
  - type: Mutation
    field: reply
    dataSource: replyFunction
    request: false
    response: false
  - type: Mutation
    field: follow
    dataSource: followMutation

  # NESTED FIELDS
  - type: Tweet
    field: profile
    dataSource: usersTable
  - type: Retweet
    field: profile
    dataSource: usersTable
    request: Tweet.profile.request.vtl
    response: Tweet.profile.response.vtl
  - type: Reply
    field: profile
    dataSource: usersTable
    request: Tweet.profile.request.vtl
    response: Tweet.profile.response.vtl
  - type: Tweet
    field: liked
    dataSource: likesTable
  - type: Reply
    field: liked
    dataSource: likesTable
    request: Tweet.liked.request.vtl
    response: Tweet.liked.response.vtl
  - type: Tweet
    field: retweeted
    dataSource: retweetsTable
  - type: Reply
    field: retweeted
    dataSource: retweetsTable
    request: Tweet.retweeted.request.vtl
    response: Tweet.retweeted.response.vtl
  - type: Retweet
    field: retweetOf
    dataSource: tweetsTable
  - type: Reply
    field: inReplyToTweet
    dataSource: tweetsTable
  - type: Reply
    field: inReplyToUsers
    dataSource: usersTable
  - type: UnhydratedTweetsPage
    field: tweets
    dataSource: tweetsTable
  - type: MyProfile
    field: tweets
    dataSource: tweetsTable
  - type: OtherProfile
    field: tweets
    dataSource: tweetsTable
    request: MyProfile.tweets.request.vtl
    response: MyProfile.tweets.response.vtl
  - type: OtherProfile
    field: following
    dataSource: relationshipsTable
  - type: OtherProfile
    field: followedBy
    dataSource: relationshipsTable

dataSources:
  - type: NONE
    name: none
  - type: AMAZON_DYNAMODB
    name: usersTable
    config:
      tableName: !Ref UsersTable
  - type: AMAZON_DYNAMODB
    name: tweetsTable
    config:
      tableName: !Ref TweetsTable
  - type: AMAZON_DYNAMODB
    name: timelinesTable
    config:
      tableName: !Ref TimelinesTable
  - type: AMAZON_DYNAMODB
    name: likesTable
    config:
      tableName: !Ref LikesTable
  - type: AMAZON_DYNAMODB
    name: retweetsTable
    config:
      tableName: !Ref RetweetsTable
  - type: AMAZON_DYNAMODB
    name: relationshipsTable
    config:
      tableName: !Ref RelationshipsTable
  - type: AMAZON_DYNAMODB
    name: likeMutation
    config:
      tableName: !Ref LikesTable
      iamRoleStatements:
        - Effect: Allow
          Action: dynamodb:PutItem
          Resource: !GetAtt LikesTable.Arn
        - Effect: Allow
          Action: dynamodb:UpdateItem
          Resource: 
            - !GetAtt UsersTable.Arn
            - !GetAtt TweetsTable.Arn
  - type: AMAZON_DYNAMODB
    name: unlikeMutation
    config:
      tableName: !Ref LikesTable
      iamRoleStatements:
        - Effect: Allow
          Action: dynamodb:DeleteItem
          Resource: !GetAtt LikesTable.Arn
        - Effect: Allow
          Action: dynamodb:UpdateItem
          Resource: 
            - !GetAtt UsersTable.Arn
            - !GetAtt TweetsTable.Arn
  - type: AMAZON_DYNAMODB
    name: followMutation
    config:
      tableName: !Ref RelationshipsTable
      iamRoleStatements:
        - Effect: Allow
          Action: dynamodb:PutItem
          Resource: !GetAtt RelationshipsTable.Arn
        - Effect: Allow
          Action: dynamodb:UpdateItem
          Resource: !GetAtt UsersTable.Arn
  - type: AWS_LAMBDA
    name: getImageUploadUrlFunction
    config:
      functionName: getImageUploadUrl
  - type: AWS_LAMBDA
    name: tweetFunction
    config:
      functionName: tweet
  - type: AWS_LAMBDA
    name: retweetFunction
    config:
      functionName: retweet
  - type: AWS_LAMBDA
    name: unretweetFunction
    config:
      functionName: unretweet
  - type: AWS_LAMBDA
    name: replyFunction
    config:
      functionName: reply

substitutions:
  TweetsTable: !Ref TweetsTable
  LikesTable: !Ref LikesTable
  UsersTable: !Ref UsersTable
  RelationshipsTable: !Ref RelationshipsTable